# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

def count_divisors number
  counter = 1	
  (1..Math.sqrt(number).to_i).each do |j|
	counter = (counter + 2) if number % j == 0
  end  
  counter
end

def triangle_number 
  number = 0
  counter = 0
  i = 1
  loop do 
    number = number + i
    i = i + 1
    counter = count_divisors number
    break if counter > 500
  end	
  p counter
  p number
end 

beginning_time = Time.now
triangle_number 
end_time = Time.now
puts "Time elapsed #{(end_time - beginning_time)*1000} milliseconds"
